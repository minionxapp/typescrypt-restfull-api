//Screate Schema
 //schema.prisma

model Project {
id         Int    @id @default(autoincrement())
name String @db.VarChar(100)
desc String @db.VarChar(100)
project_id Int 
 create_by   String  @db.VarChar(20)
update_by   String?  @db.VarChar(20)
create_at   DateTime? 
update_at   DateTime? 
@@map("projects")
}



//ROUTE

import {ProjectController } from "../controller/project-controller";


//ROUTE Project
apiRouter.post("/api/projects",ProjectController.create)
apiRouter.get("/api/projects/:projectId",ProjectController.get)
apiRouter.put("/api/projects/:projectId",ProjectController.update)
apiRouter.delete("/api/projects/:projectId", ProjectController.remove)
apiRouter.get("/api/projects", ProjectController.search)



//UTIL-TEST//tambahkan ke dalam file test-util.ts pada folder test 
//CREATE UTIL-TEST Project
export class ProjectTest{
  static async deleteAll(){
await prismaClient.project.deleteMany({
    where :{
        username :"test"
    }
})
} 
  static async create(){
await prismaClient.project.create({
    data :{
name:"test",
desc:"test",
project_id:1
    }
})
} 
 static async get(): Promise<Project> {
 const project = await prismaClient.project.findFirst({
    where: {
       username: "test"
    }
  })
 if (!project) {
     throw new Error("Project is not found")
  }
 return project
 }
}
}
//tambahkan Project pada import { User, Contact, Tablecoba } from "@prisma/client";